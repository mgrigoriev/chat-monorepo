syntax = "proto3";

package github.com.mgrigoriev.chat_monorepo.chatmessages;

import "api/chatmessages/messages.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/mgrigoriev/chat-monorepo/chatmessages/pkg/api/chatmessages;chatmessages";

// ChatMessagesService - сервис сообщений чата
service ChatMessagesService {
  // SaveChatMessage - сохранить сообщение
  rpc SaveChatMessage(SaveChatMessageRequest) returns (SaveChatMessageResponse) {
    option (google.api.http) = {
      post: "/api/v1/chatmessages"
      body: "info"
    };
  }
  // ListPrivateChatMessages - получить список сообщений переписки пользователя с другим пользователем
  rpc ListPrivateChatMessages(ListPrivateChatMessagesRequest) returns (ListChatMessagesResponse) {
    option (google.api.http) = {
      get: "/api/v1/chatmessages/private"
    };
  }
  // ListServerChatMessagesRequest - запрос на получение сообщений сервера
  rpc ListServerChatMessages(ListServerChatMessagesRequest) returns (ListChatMessagesResponse) {
    option (google.api.http) = {
      get: "/api/v1/chatmessages/server"
    };
  }
}
