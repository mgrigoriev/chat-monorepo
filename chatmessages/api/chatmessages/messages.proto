syntax = "proto3";

package github.com.mgrigoriev.chat_monorepo.chatmessages;

import "buf/validate/validate.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/mgrigoriev/chat-monorepo/chatmessages/pkg/api/chatmessages;chatmessages";

// ChatMessageInfo - детали сообщения
message ChatMessageInfo {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "ChatMessageInfo"
      description: "ChatMessageInfo - детали сообщения"
      required: ["user_id", "user_name", "recipient_type", "recipient_id", "content"]
      example: "{\"user_id\": 1, \"user_name\": \"joe\", \"recipient_type\": 1, \"recipient_id\": 2, \"content\": \"hello\"}"
    }
  };

  enum RECIPIENT_TYPE {
    UNSPECIFIED = 0;
    USER = 1;
    SERVER = 2;
  }

  // user_id - id автора сообщения
  uint64 user_id = 1 [json_name = "user_id", (buf.validate.field).required = true, (google.api.field_behavior) = REQUIRED];
  //user_name - имя автора сообщения
  string user_name = 2 [json_name = "user_name", (buf.validate.field).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
  // recipient_type - тип получателя сообщения
  RECIPIENT_TYPE recipient_type = 3 [json_name = "recipient_type", (buf.validate.field).enum.defined_only = true, (google.api.field_behavior) = REQUIRED];
  // recipient_id - id получателя сообщения
  uint64 recipient_id = 4 [json_name = "recipient_id", (buf.validate.field).required = true, (google.api.field_behavior) = REQUIRED];
  // content - содержимое сообщения
  string content = 5 [json_name = "content", (buf.validate.field).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
}

// ChatMessage
message ChatMessage {
  // id - уникальный идентификатор сообщения
  uint64 id = 1 [json_name = "id"];
  // info - детали сообщения
  ChatMessageInfo info = 2 [json_name = "info"];
}

// SaveChatMessageRequest - запрос SaveChatMessage
message SaveChatMessageRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "SaveChatMessageRequest"
      description: "SaveChatMessageRequest - запрос SaveChatMessage"
      required: ["info"]
    }
  };

  // info - детали сообщения
  ChatMessageInfo info = 1 [json_name = "info", (buf.validate.field).required = true, (google.api.field_behavior) = REQUIRED];
}

// SaveChatMessageResponse - ответ SaveChatMessage
message SaveChatMessageResponse {
  // id - уникальный идентификатор сообщения
  uint64 id = 1 [json_name = "id"];
}

// ListPrivateChatMessagesRequest - запрос на получение сообщений переписки пользователя с другим пользователем
message ListPrivateChatMessagesRequest {

  // user_id - id пользователя
  uint64 user_id = 1 [json_name = "user_id", (buf.validate.field).required = true, (google.api.field_behavior) = REQUIRED];
  // other_user_id - id собеседника пользователя
  uint64 other_user_id = 2 [json_name = "other_user_id", (buf.validate.field).required = true, (google.api.field_behavior) = REQUIRED];
}

// ListServerChatMessagesRequest - запрос на получение сообщений сервера
message ListServerChatMessagesRequest {
  // server_id - id сервера
  uint64 server_id = 2 [json_name = "server_id", (buf.validate.field).required = true, (google.api.field_behavior) = REQUIRED];
}

// ListChatMessagesResponse - ответ ListChatMessages
message ListChatMessagesResponse {
  // chat_messages - все сообщения
  repeated ChatMessage chat_messages = 1 [json_name = "chat_messages"];
}
